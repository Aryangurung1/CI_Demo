name: PR Commit Validation and Dev Version Bump

on:
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened]

jobs:
  validate-commit:
    name: Validate Latest Commit Message
    runs-on: frontend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest commit message
        id: commit_msg
        run: |
          LATEST_MSG=$(git log -1 --pretty=%s)
          echo "Latest commit message: $LATEST_MSG"
          echo "commit_msg=$LATEST_MSG" >> $GITHUB_OUTPUT

      - name: Validate commit message format
        run: |
          if [[ ! "${{ steps.commit_msg.outputs.commit_msg }}" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?:\ .* ]]; then
            echo "Commit message does not follow Conventional"
            echo "Example: 'feat(auth): add login flow'"
            exit 1
          fi
          echo "Commit message format is valid."

  bump-version:
    name: Bump Semantic Version
    runs-on: frontend
    needs: validate-commit

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Check if any tags exist
        id: check_tag
        run: |
          if [ "$(git tag)" = "" ]; then
            echo "no_tags=true" >> $GITHUB_OUTPUT
          else
            echo "no_tags=false" >> $GITHUB_OUTPUT
          fi

      - name: Create initial tag if none exist
        if: steps.check_tag.outputs.no_tags == 'true'
        run: |
          git tag V0.0.0
          git push origin V0.0.0

      - name: Bump Semantic Version (dry run)
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          release_branches: dev
          dry_run: true
          fetch_all_tags: true
          tag_prefix: "V"
          custom_release_rules: |
            feat:minor
            fix:patch
            BREAKING CHANGE:major

      - name: Write new version to file
        run: echo "${{ steps.tag.outputs.new_tag }}" > version.txt

      - name: Commit and push updated version.txt to dev branch
        run: |
          git config --global user.email "kamina5432167890@gmail.com"
          git config --global user.name "Aryan Gurung"
          git add version.txt
          git commit -m "chore(version): bump to ${{ steps.tag.outputs.new_tag }}"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} dev
